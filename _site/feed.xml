<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nela Blog</title>
    <description>Android 系统和应用层开发  | Nela，Android &amp; Mobile  | 这里是 @Nela 的个人博客，与你一起发现更大的世界。</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Tue, 30 Jan 2018 22:21:44 +0800</pubDate>
    <lastBuildDate>Tue, 30 Jan 2018 22:21:44 +0800</lastBuildDate>
    <generator>Jekyll v3.6.2</generator>
    
      <item>
        <title>Android 源码编译流程分析</title>
        <description>&lt;h2 id=&quot;android-源码编译方式&quot;&gt;android 源码编译方式&lt;/h2&gt;

&lt;h3 id=&quot;编译环境和配置&quot;&gt;编译环境和配置&lt;/h3&gt;

&lt;p&gt;1.source build/envset.sh
    //加载　vendorsetup.sh 脚本
    //加载　lunch 的命令（在本次回话窗口有效）&lt;/p&gt;

&lt;p&gt;2.lunch&lt;br /&gt;
  // 选择版型　（生成的镜像要运行在什么样的设备上）
  //选择好后会存在　answer 中&lt;/p&gt;

&lt;h3 id=&quot;整体编译&quot;&gt;整体编译&lt;/h3&gt;

&lt;p&gt;make　　－j8&lt;br /&gt;
//整体编译命令执行　　－j8表示线程数（与编译的线程并不是越多越好,通常是根据你机器cup的核心来确定:core*2,即当前cpu的核心的2倍.比如,我现在的笔记本是双核四线程的,因此根据公式,最快速的编译可以make -j8.）&lt;/p&gt;

&lt;h3 id=&quot;模块编译指令&quot;&gt;模块编译指令&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;croot: Changes directory to the top of the tree.&lt;/li&gt;
  &lt;li&gt;m: Makes from the top of the tree.&lt;/li&gt;
  &lt;li&gt;mm: Builds all of the modules in the current directory.&lt;/li&gt;
  &lt;li&gt;mmm: Builds all of the modules in the supplied directories.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;针对文件不同查找某个字段的命令　&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;cgrep: Greps on all local C/C++ files.&lt;/li&gt;
  &lt;li&gt;jgrep: Greps on all local Java files.&lt;/li&gt;
  &lt;li&gt;resgrep: Greps on all local res/*.xml files.&lt;/li&gt;
  &lt;li&gt;godir: Go to the directory containing a file.&lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://www.jianshu.com/p/367f0886e62b&quot;&gt;参考文章&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;make snod
重新打包系统镜像
编译好指定模块后,如果我们想要将该模块对应的apk集成到系统镜像中,需要借助make snod指令重新打包系统镜像,这样我们新生成的system.img中就包含了刚才编译的Launcher2模块了.重启模拟器之后生效.&lt;/p&gt;

&lt;h2 id=&quot;copy和宏控机制流程&quot;&gt;copy和宏控机制流程&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;由于原生不支持copy 因此添加脚本将代码进行封装，从而达到以下目的:&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;编译流程的简化只需简单配置文件名.&lt;/li&gt;
  &lt;li&gt;客制化许多重复的修改可以添加宏控达到.&lt;/li&gt;
  &lt;li&gt;copy 许多驱动层文件已经配置好直接copy 将原生代码隔离（原型模式）.&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;脚本构建的基本思路
need clone?-&amp;gt; copyfile -&amp;gt;sed　config-&amp;gt; makeNelaAction-&amp;gt; SOAP原生编译方式&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;3.详细分析&lt;/p&gt;

&lt;h2 id=&quot;copy流程&quot;&gt;copy流程&lt;/h2&gt;

&lt;p&gt;[–&amp;gt;file_name: mk]&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;c1&quot;&gt;#!/usr/bin/perl&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;#[Nela][Nela_COMPILE_ENV]&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$user_mode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;no&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$clone&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;no&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$action&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;new&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$act&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;new&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;err&quot;&gt;判断传入参数要执行的动作&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;和项目名等参数&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.................&lt;/span&gt;

    &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;判断要执行的脚本文件是否存在　　&lt;/span&gt;
    &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;！－&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;文件名&quot;&lt;/span&gt; 

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;../Nela/script/clone.sh&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;../Nela/script/clone.sh not exst, pls check!\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;../Nela/mk/$new_project/ProjectConfig.mk&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;../Nela/mk/$new_project/ProjectConfig.mk not exst, pls check!\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;



    &lt;span class=&quot;o&quot;&gt;/*&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;FILEVAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;filepath&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;nv&quot;&gt;filepath&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;可以有如下三种模式&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&quot;filepath&quot;&lt;/span&gt;        &lt;span class=&quot;err&quot;&gt;以只读模式打开文件&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&quot;&amp;gt;filepath&quot;&lt;/span&gt;       &lt;span class=&quot;err&quot;&gt;以写模式打开文件&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&quot;&amp;gt;&amp;gt;filepath&quot;&lt;/span&gt;      &lt;span class=&quot;err&quot;&gt;以追加模式打开文件&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;写和追加的区别在于写模式将原文件覆盖&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;而追加模式则在文件末尾处添加内容&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&quot;+&amp;gt;filepath&quot;&lt;/span&gt;      &lt;span class=&quot;err&quot;&gt;以读和写方式打开文件&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
                    &lt;span class=&quot;s&quot;&gt;&quot;+&amp;gt;&amp;gt;filepath&quot;&lt;/span&gt;     &lt;span class=&quot;err&quot;&gt;以读和追加方式打开文件&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.*/&lt;/span&gt;

    &lt;span class=&quot;sr&quot;&gt;/*      当文件打开失败时结束程序 die (&quot;cannot open input file file1\n&quot;);*/&lt;/span&gt;

    &lt;span class=&quot;nv&quot;&gt;$prj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;../Nela/mk/$new_project/ProjectConfig.mk&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;FILE_HANDLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;$prj&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;die&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;cannot open $prj\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;&amp;lt;FILE_HANDLE&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/^(\S+)\s*=\s*(\S+)/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
        &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;环境变量获取&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;close&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;FILE_HANDLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;


    &lt;span class=&quot;err&quot;&gt;＃如上代码通过只读的方式读取所用宏　并将值存在&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;中下面将其赋值&lt;/span&gt;


    &lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$Nela_target_project&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Nela_target_project&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$pcb_config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;pcb_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$Nela_memory_flash&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Nela_memory_flash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$Nela_audio_effect_para&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Nela_audio_effect_para&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$Nela_camera_effect_para&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Nela_camera_effect_para&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$Nela_battery_capacity&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Nela_battery_capacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$Nela_product_folder&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Nela_product_folder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;#add by Nela zhuangshengbin&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$Nela_customer&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Nela_customer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$logo_size&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;logo_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$wallpaper_size&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;wallpaper_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$Nela_COCLOCK_SUPPORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Nela_COCLOCK_SUPPORT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;


    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;act: $act\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;user_mode: $user_mode\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;clone: $clone\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Nela_target_project: $Nela_target_project\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;pcb_config: $pcb_config\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Nela_memory_flash: $Nela_memory_flash\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Nela_audio_effect_para: $Nela_audio_effect_para\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Nela_camera_effect_para: $Nela_camera_effect_para\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Nela_battery_capacity: $Nela_battery_capacity\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Nela_product_folder: $Nela_product_folder\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Nela_customer: $Nela_customer\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;logo_size: $logo_size\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;wallpaper_size: $wallpaper_size\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;



    &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;如上代码　将关键信息的配置打印出来　并定义变量　　这些信息　决定了使用那些&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;copy&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;clone&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;文件的位置，驱动文件的位置，等&lt;/span&gt;
    &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;并并将宏的键和&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;　存储在环境变量中等待替换&lt;/span&gt;


    &lt;span class=&quot;nv&quot;&gt;$file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;../Nela/mk/$new_project/${Nela_target_project}_defconfig&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;FILE_MODEL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;$file&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;die&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;cannot open $file\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;&amp;lt;FILE_MODEL&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/.*(CONFIG_USB_MTK_OTG)=*\s*(\S+)/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/.*(CONFIG_MTK_CM3623)=*\s*(\S+)/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;close&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;FILE_MODEL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;



    &lt;span class=&quot;err&quot;&gt;＃此处同理获取项目名　默认值获取&lt;/span&gt;


    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$clone&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;eq&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;yes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;-------------Copy Nela files!----------------\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        
      &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;如果需要&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;clone&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;则执行&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;clone&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;脚本&lt;/span&gt;  
      &lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bash ../Nela/script/clone.sh 0 $new_project $pcb_config&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;-------------Copy Nela files error----------------\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;-------------Copy Nela files end----------------\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$act&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;eq&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;clone&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;-----------------------------------------------------\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;------- Nela Build Infomation END -------------------\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;-----------------------------------------------------\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;elsif&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$act&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;eq&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;copybin&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;-----------------------------------------------------\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;------- Nela Build Infomation END -------------------\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;-----------------------------------------------------\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

      &lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bash ../Nela/script/build_log.sh $new_project $Nela_target_project $user_mode&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bash ../Nela/script/copy_bin.sh $new_project $Nela_target_project&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;elsif&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$act&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;eq&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;copybin_sign&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;-----------------------------------------------------\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;------- Nela Build Infomation END -------------------\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;-----------------------------------------------------\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

      &lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bash ../Nela/script/build_log.sh $new_project $Nela_target_project $user_mode&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bash ../Nela/script/copy_bin_sign.sh $new_project $Nela_target_project&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;以上时确定是否&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;clone&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;
    &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;以下执行的是编译脚本　　主要内容在&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;makeNelaAction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;sh&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$user_mode&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;eq&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;yes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$act&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;eq&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;mm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
           &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ARGV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;eq&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
           &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;mm action need path!\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
           &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;***************************************************\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;************** build user software ****************\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;***************************************************\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;-----------------------------------------------------\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;------- Nela Build Infomation END -------------------\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;-----------------------------------------------------\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# setBuildEnvVars(&quot;./mbldenv.sh&quot;);&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bash ../Nela/script/makeNelaAction.sh $user_mode $act $ARGV[3]&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$act&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;eq&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;mm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ARGV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;eq&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
           &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;mm action need path!\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
           &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;***************************************************\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;************** build eng software ****************\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;***************************************************\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;-----------------------------------------------------\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;------- Nela Build Infomation END -------------------\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;-----------------------------------------------------\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# setBuildEnvVars(&quot;./mbldenv.sh&quot;);&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bash ../Nela/script/makeNelaAction.sh $user_mode $act $ARGV[2]&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;脚本执行完的收尾工作，打印成功或失败异常。&lt;/span&gt;

      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;#### compile exit at: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CurrTimeStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; ####\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$act&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;eq&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;new&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
            &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$act&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;eq&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;remake&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
            &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$act&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;eq&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;snod&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
            &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$act&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;eq&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;pl&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$act&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;eq&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;rk&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$act&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;eq&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;update-modem&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;    
            &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$act&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;eq&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;newk&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$act&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;eq&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;lk&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$act&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;eq&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;logo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$act&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;eq&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;kernel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$act&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;eq&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;bootimage&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$act&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;eq&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;otapackage&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bash ../Nela/script/build_log.sh $new_project $Nela_target_project $user_mode&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
          &lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bash ../Nela/script/copy_bin.sh $new_project $Nela_target_project&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;elsif&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$act&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;eq&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;sign-image&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$act&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;eq&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;ota-sign&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bash ../Nela/script/build_log.sh $new_project $Nela_target_project $user_mode&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
          &lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bash ../Nela/script/copy_bin_sign.sh $new_project $Nela_target_project&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;#### compile exit at: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CurrTimeStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; ####\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;compile error! Pls check build.log\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;


    &lt;span class=&quot;k&quot;&gt;sub &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setBuildEnvVars&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$bldProfile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;shift&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;die&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;\&quot;$bldProfile\&quot; does NOT exist!\n&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$bldProfile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# Todo: error handling for '. $bldProfile' command&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$envVarList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`. $bldProfile &amp;amp;&amp;amp; env | grep &quot;.*=.*&quot;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;nb&quot;&gt;chomp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;nv&quot;&gt;$ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/(.*)=(.*)/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/\n/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$envVarList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$DEBUG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;[START LOGGING]: Current build environment variables setting...\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;PATH=$ENV{PATH}\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;ANDROID_JAVA_HOME=$ENV{ANDROID_JAVA_HOME}\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;JAVA_HOME=$ENV{JAVA_HOME}\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;PYTHONPATH=$ENV{PYTHONPATH}\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;[END LOGGING]\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;sub &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;CurrTimeStr&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;my&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$sec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$hour&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$mday&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$mon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;localtime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sprintf&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;%4.4d/%2.2d/%2.2d %2.2d:%2.2d:%2.2d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$year&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1900&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$mon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$mday&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$hour&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$sec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;#[Nela][Nela_COMPILE_ENV]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;分析clone-脚本&quot;&gt;分析clone 脚本&lt;/h3&gt;

&lt;p&gt;[–&amp;gt;file_name:clone.sh]&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;            &lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

            ＃modem 处理此处不看
            .................



            ＃软件版本的检查
            &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\e&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;[1;32m Are you sure the SW version is&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\e&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;[0m&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\e&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;[1;31m &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$MTK_BUILD_VERNO&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\e&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;[0m &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\e&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;[1;32m? (y or n)&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\e&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;[0m &quot;&lt;/span&gt;
            &lt;span class=&quot;nb&quot;&gt;read&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-t15&lt;/span&gt; answer
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;yes&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;y&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Y&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Yes&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
            &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
            &lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;

            ＃依次执行clone
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
            //拷贝驱动　pcb
              bash ../Nela/script/clone_drv.sh &lt;span class=&quot;nv&quot;&gt;$2&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$3&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;

            //拷贝客制化
            bash ../Nela/script/clone_integration.sh &lt;span class=&quot;nv&quot;&gt;$2&lt;/span&gt;
            //copy mmi
            bash ../Nela/script/clone_mmi.sh &lt;span class=&quot;nv&quot;&gt;$2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;分析copy-mmi&quot;&gt;分析copy mmi&lt;/h3&gt;
&lt;p&gt;此处按照猜测应该分为两部分　，一部分copy替换文件，一部分替换宏控&lt;/p&gt;

&lt;p&gt;[–&amp;gt;file_name:clone_mmi.sh]&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;            //此处为宏控字段替换的核心函数
            function write_xml()
            {
            change=${!1}
            if [ $change ]; then
               if [ $change = &quot;sr_null&quot; ];then
            #     sed -i &quot;s/\&quot;$control\&quot;&amp;gt;.*&amp;lt;/\&quot;$control\&quot;&amp;gt;&amp;lt;/&quot; $path
                  sed -i &quot;/\&quot;$1\&quot;/s/\&quot;&amp;gt;.*&amp;lt;/\&quot;&amp;gt;&amp;lt;/&quot; $path
               else
            #     sed -i &quot;s/\&quot;$control\&quot;&amp;gt;.*&amp;lt;/\&quot;$control\&quot;&amp;gt;$change&amp;lt;/&quot; $path
                  sed -i &quot;/\&quot;$1\&quot;/s/\&quot;&amp;gt;.*&amp;lt;/\&quot;&amp;gt;$change&amp;lt;/&quot; $path
               fi
               echo &quot;$1 = $change&quot;
            #else
            #  echo &quot;$control is not be setted&quot;
            fi
            }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Sat, 20 Jan 2018 22:32:00 +0800</pubDate>
        <link>http://localhost:4000/2018/01/20/responsive-android/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/01/20/responsive-android/</guid>
        
        <category>Android-FrameWork</category>
        
        
      </item>
    
      <item>
        <title>Past and future</title>
        <description>&lt;h1 id=&quot;past-and-future&quot;&gt;Past and future&lt;/h1&gt;

&lt;h2 id=&quot;java&quot;&gt;java&lt;/h2&gt;

&lt;h3 id=&quot;java-基础题目待办列表&quot;&gt;java 基础题目待办列表&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;java base 1000     30%&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;java answer    精华专区-&amp;gt;java问答题  0 %&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;数据结构&quot;&gt;数据结构&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;数据结构基础       -&amp;gt; 剑指offer hot前20&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;设计模式&quot;&gt;设计模式&lt;/h3&gt;

&lt;h4 id=&quot;创建型模式&quot;&gt;创建型模式&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;单例模式（Singleton Pattern）&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;产生一个对象该对象只能存在一个&lt;/li&gt;
      &lt;li&gt;阐述例子： 数据库帮助对象 (线程问题) 同步加锁&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;工厂模式（Factory Pattern）&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;抽象工厂模式（Abstract Factory Pattern）&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;用于产生一个简单的对象，减少过多的配置信息填入.&lt;/li&gt;
      &lt;li&gt;阐述例子： 产生一个线程池（配参数信息，单核双核）&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;原型模式（Prototype Pattern）&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;复制一个已经存在的对象clone 减少创建一个对象的成本 只改变其中的细节&lt;/li&gt;
      &lt;li&gt;阐述例子： 发送邮件 更改内容不更改基本信息 （多用于for循环中产生对象）深clone浅clone&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;建造者模式（Builder Pattern）&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;产生一个复杂对象，更加注重零件的组装顺序&lt;/li&gt;
      &lt;li&gt;阐述例子： 汽车的装配顺序&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;结构型模式&quot;&gt;结构型模式&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;适配器模式（Adapter Pattern）&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;a-b-c  b 通过继承或者实现A 的接口 完成 原有对象到外来对象同转化&lt;/li&gt;
      &lt;li&gt;阐述例子 ：AIDL对象&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;代理模式（Proxy Pattern）&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;代理模式 和过滤器模式相似 都是对行为一种监听和查看&lt;/li&gt;
      &lt;li&gt;阐述例子： 静态代理和动态代理（反射机制）&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;享元模式（Flyweight Pattern）&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;定义几个经常被用的对象的对象池,然后共同使用同一个对象减少内存的开销，注意使用的颗粒度.&lt;/li&gt;
      &lt;li&gt;阐述例子： 例如考试信息省份等&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;组合模式（Composite Pattern）
    &lt;ol&gt;
      &lt;li&gt;用于树形结构 现已经不常用&lt;/li&gt;
      &lt;li&gt;阐述例子： viewGroup和view UI构建中经常用到&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;桥接模式（Bridge Pattern）&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;过滤器模式（Filter、Criteria Pattern）&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;装饰器模式（Decorator Pattern）&lt;/li&gt;
  &lt;li&gt;外观模式（Facade Pattern）&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;行为型模式&quot;&gt;行为型模式&lt;/h4&gt;
&lt;p&gt;这些设计模式特别关注对象之间的通信。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;责任链模式（Chain of Responsibility Pattern）&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;阐述例子：touch点击事件&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;状态模式（State Pattern）&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;根据状态决定行为模式和方法，对状态进行封装.&lt;/li&gt;
      &lt;li&gt;阐述例子：电梯状态方法&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;访问者模式（Visitor Pattern）&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;根据访问对象的不同给出不同的应对策略.&lt;/li&gt;
      &lt;li&gt;阐述例子：web/android 访问servlet&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;观察者模式（Observer Pattern)&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;阐述例子：EventBus 和Rxjava的实现思想.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;备忘录模式（Memento Pattern）&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;对对象内部的状态进行备份，是针对对象进行的备份（在运行期的一种备份模式).&lt;/li&gt;
      &lt;li&gt;阐述例子： user登陆信息.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;命令模式（Command Pattern）&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;对指令的一种包装&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;迭代器模式（Iterator Pattern）
    &lt;ol&gt;
      &lt;li&gt;已经被java中的迭代器代替了&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;策略模式（Strategy Pattern）&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;和代理模式相似 和访问者模式也相似 ，是执行同一种方法，通过产生不同的策略执行不同的方法&lt;/li&gt;
      &lt;li&gt;阐述例子： Rxjava&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;中介者模式（Mediator Pattern）&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;MVC中的C&lt;/li&gt;
      &lt;li&gt;阐述例子：MVC模式 listview baseAdapter&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;解释器模式（Interpreter Pattern）&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;解释一种特定的语法。hashMap 这种方式 采用递归，压栈，设置终止元素和非终止元素。代码臃肿维护难，通常可以采用脚本的方式进行优化，不深究&lt;/li&gt;
      &lt;li&gt;阐述例子：计算器 四则运算&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;模板模式（Template Pattern）&lt;/li&gt;
  &lt;li&gt;空对象模式（Null Object Pattern）&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;j2ee-模式&quot;&gt;J2EE 模式&lt;/h4&gt;
&lt;p&gt;这些设计模式特别关注表示层。这些模式是由 Sun Java Center 鉴定的。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;MVC 模式（MVC Pattern）&lt;/li&gt;
  &lt;li&gt;业务代表模式（Business Delegate Pattern）&lt;/li&gt;
  &lt;li&gt;组合实体模式（Composite Entity Pattern）&lt;/li&gt;
  &lt;li&gt;数据访问对象模式（Data Access Object Pattern）&lt;/li&gt;
  &lt;li&gt;前端控制器模式（Front Controller Pattern）&lt;/li&gt;
  &lt;li&gt;拦截过滤器模式（Intercepting Filter Pattern）&lt;/li&gt;
  &lt;li&gt;服务定位器模式（Service Locator Pattern）&lt;/li&gt;
  &lt;li&gt;传输对象模式（Transfer Object Pattern）&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;useunderstand&quot;&gt;use/understand&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;创建型模式:
    单例模式（Singleton Pattern）
    工厂模式（Factory Pattern）
    原型模式（Prototype Pattern）
结构型模式:
    适配器模式（Adapter Pattern）
    代理模式（Proxy Pattern）
    享元模式（Flyweight Pattern）
行为型模式:
    责任链模式（Chain of Responsibility Pattern）
    状态模式（State Pattern）
    访问者模式（Visitor Pattern）
    观察者模式（Observer Pattern）
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;android-application&quot;&gt;android application&lt;/h2&gt;
&lt;p&gt;now:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;项目
    &lt;ul&gt;
      &lt;li&gt;智慧新闻&lt;/li&gt;
      &lt;li&gt;商城&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;掌握基本框架使用&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Dagger2&lt;/li&gt;
      &lt;li&gt;EventBus&lt;/li&gt;
      &lt;li&gt;litepal&lt;/li&gt;
      &lt;li&gt;butterknife&lt;/li&gt;
      &lt;li&gt;retifate&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;MVP MVC 可以使用&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;网络框架没有学习过。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;了解apk 的发布流程 和其中的过程&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- 混淆
- 签名
- 反编译
- crash
- jni开发
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;细节&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;几种回调方式 引用的复习和使用&lt;/li&gt;
      &lt;li&gt;Fragment Rectley 等控件的回调使用&lt;/li&gt;
      &lt;li&gt;User全局变量的控制流程&lt;/li&gt;
      &lt;li&gt;布局的调试方式DDMS 截屏&lt;/li&gt;
      &lt;li&gt;AIDL 跨进程通信 传输序列化对象！&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;future:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Tag的规范使用&lt;/li&gt;
  &lt;li&gt;内存泄露的处理方式OOM&lt;/li&gt;
  &lt;li&gt;MVVM的深度学习（）demo 搭建demo （记笔记！）&lt;/li&gt;
  &lt;li&gt;尝试框架集成使用Rxjava+Retorfit&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;商城类APP功能开发&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  1.下拉刷新 ==
  2.分类 *
  3.搜索功能 ==
  4.排序 （）==
  5.个人中心模块完善 增添头像功能 ==
  6.和HTML5 交互 =*
  7.三方登陆网络交互 *
  8.三方登陆
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;android-基础题目待办列表&quot;&gt;android 基础题目待办列表&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;android base   70%&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;android-framework&quot;&gt;android framework&lt;/h2&gt;

&lt;p&gt;now:&lt;/p&gt;

&lt;p&gt;1.内容&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;超级省电&lt;/li&gt;
  &lt;li&gt;notification  从产生开始到销毁结束&lt;/li&gt;
  &lt;li&gt;宏控 和脚本的执行流程  如何自定义宏控&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;future:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;phonewindowmanager  按键 事件&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;prefrence  如何保存 并绘制 永久带数据库的视图&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;package-app-systemUI&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;activity 启动过程&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    1.Zygote+
    2.systemservice
    3.AMS
    4.PMS
    5.应用程序启动过程

    8月：bindler ipc+4大组件启动模式+消息处理机制looper
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;web&quot;&gt;web&lt;/h2&gt;

&lt;p&gt;now:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;项目&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;考试系统&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;流程&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;了解后端和前端如何联系，后端是如何实现和搭建的做过简单的Demo&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;自建blog&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;基础知识&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; - servlet
 - jsp
 - eL表达式
 - 表单数据使用
 - 隐式对象
 - 使用代码片段
 - js
 - html
 - css
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;future:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	1.jqueary  
	2.http协议分析处理
	3.数据库操作事务处理
	4.aop 面向切片编程
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;tools&quot;&gt;tools&lt;/h2&gt;
&lt;p&gt;now:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;androidstudio&lt;/li&gt;
  &lt;li&gt;eclipse&lt;/li&gt;
  &lt;li&gt;ubuntu&lt;/li&gt;
  &lt;li&gt;adb&lt;/li&gt;
  &lt;li&gt;shell&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;future:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;linux 命令&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;want-to-do&quot;&gt;Want to do&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;逆向工程&lt;/li&gt;
  &lt;li&gt;smlite 语言&lt;/li&gt;
  &lt;li&gt;shell&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;work-experience&quot;&gt;work experience&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;宁波萨瑞通信&lt;/li&gt;
  &lt;li&gt;江西时空电子&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;link&quot;&gt;link&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/cuizehui123&quot;&gt;CSDN_nela&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://cuizehui.github.io&quot;&gt;github_nela &lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 17 Jan 2018 04:58:00 +0800</pubDate>
        <link>http://localhost:4000/2018/01/16/responsive-cuizehui/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/01/16/responsive-cuizehui/</guid>
        
        <category>Nela</category>
        
        
      </item>
    
      <item>
        <title>Responsive Cuizehui</title>
        <description>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;meta name=&quot;author&quot; content=&quot;&amp;quot;Nela&amp;quot;&quot;&gt;
&lt;meta name=&quot;layout&quot; content=&quot;post&quot;&gt;
&lt;meta name=&quot;date&quot; content=&quot;2018-01-16 20:58:00&quot;&gt;
&lt;meta name=&quot;header-img&quot; content=&quot;&amp;quot;img/post-bg-rwd.jpg&amp;quot;&quot;&gt;
&lt;meta name=&quot;tags&quot; content=&quot;,- Nela&quot;&gt;&lt;style&gt;body {
  max-width: 980px;
  border: 1px solid #ddd;
  outline: 1300px solid #fff;
  margin: 16px auto;
}

body .markdown-body
{
  padding: 45px;
}

@font-face {
  font-family: fontawesome-mini;
  src: url(data:font/woff;charset=utf-8;base64,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) format('woff');
}

@font-face {
  font-family: octicons-anchor;
  src: url(data:font/woff;charset=utf-8;base64,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) format('woff');
}

.markdown-body {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  color: #333333;
  overflow: hidden;
  font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Segoe UI&quot;, Arial, freesans, sans-serif;
  font-size: 16px;
  line-height: 1.6;
  word-wrap: break-word;
}

.markdown-body a {
  background: transparent;
}

.markdown-body a:active,
.markdown-body a:hover {
  outline: 0;
}

.markdown-body b,
.markdown-body strong {
  font-weight: bold;
}

.markdown-body mark {
  background: #ff0;
  color: #000;
  font-style: italic;
  font-weight: bold;
}

.markdown-body sub,
.markdown-body sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
.markdown-body sup {
  top: -0.5em;
}
.markdown-body sub {
  bottom: -0.25em;
}

.markdown-body h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

.markdown-body img {
  border: 0;
}

.markdown-body hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0;
}

.markdown-body pre {
  overflow: auto;
}

.markdown-body code,
.markdown-body kbd,
.markdown-body pre,
.markdown-body samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

.markdown-body input {
  color: inherit;
  font: inherit;
  margin: 0;
}

.markdown-body html input[disabled] {
  cursor: default;
}

.markdown-body input {
  line-height: normal;
}

.markdown-body input[type=&quot;checkbox&quot;] {
  box-sizing: border-box;
  padding: 0;
}

.markdown-body table {
  border-collapse: collapse;
  border-spacing: 0;
}

.markdown-body td,
.markdown-body th {
  padding: 0;
}

.markdown-body .codehilitetable {
  border: 0;
  border-spacing: 0;
}

.markdown-body .codehilitetable tr {
  border: 0;
}

.markdown-body .codehilitetable pre,
.markdown-body .codehilitetable div.codehilite {
  margin: 0;
}

.markdown-body .linenos,
.markdown-body .code,
.markdown-body .codehilitetable td {
  border: 0;
  padding: 0;
}

.markdown-body td:not(.linenos) .linenodiv {
  padding: 0 !important;
}

.markdown-body .code {
  width: 100%;
}

.markdown-body .linenos div pre,
.markdown-body .linenodiv pre,
.markdown-body .linenodiv {
  border: 0;
  -webkit-border-radius: 0;
  -moz-border-radius: 0;
  border-radius: 0;
  -webkit-border-top-left-radius: 3px;
  -webkit-border-bottom-left-radius: 3px;
  -moz-border-radius-topleft: 3px;
  -moz-border-radius-bottomleft: 3px;
  border-top-left-radius: 3px;
  border-bottom-left-radius: 3px;
}

.markdown-body .code div pre,
.markdown-body .code div {
  border: 0;
  -webkit-border-radius: 0;
  -moz-border-radius: 0;
  border-radius: 0;
  -webkit-border-top-right-radius: 3px;
  -webkit-border-bottom-right-radius: 3px;
  -moz-border-radius-topright: 3px;
  -moz-border-radius-bottomright: 3px;
  border-top-right-radius: 3px;
  border-bottom-right-radius: 3px;
}

.markdown-body * {
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

.markdown-body input {
  font: 13px Helvetica, arial, freesans, clean, sans-serif, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;;
  line-height: 1.4;
}

.markdown-body a {
  color: #4183c4;
  text-decoration: none;
}

.markdown-body a:hover,
.markdown-body a:focus,
.markdown-body a:active {
  text-decoration: underline;
}

.markdown-body hr {
  height: 0;
  margin: 15px 0;
  overflow: hidden;
  background: transparent;
  border: 0;
  border-bottom: 1px solid #ddd;
}

.markdown-body hr:before,
.markdown-body hr:after {
  display: table;
  content: &quot; &quot;;
}

.markdown-body hr:after {
  clear: both;
}

.markdown-body h1,
.markdown-body h2,
.markdown-body h3,
.markdown-body h4,
.markdown-body h5,
.markdown-body h6 {
  margin-top: 15px;
  margin-bottom: 15px;
  line-height: 1.1;
}

.markdown-body h1 {
  font-size: 30px;
}

.markdown-body h2 {
  font-size: 21px;
}

.markdown-body h3 {
  font-size: 16px;
}

.markdown-body h4 {
  font-size: 14px;
}

.markdown-body h5 {
  font-size: 12px;
}

.markdown-body h6 {
  font-size: 11px;
}

.markdown-body blockquote {
  margin: 0;
}

.markdown-body ul,
.markdown-body ol {
  padding: 0;
  margin-top: 0;
  margin-bottom: 0;
}

.markdown-body ol ol,
.markdown-body ul ol {
  list-style-type: lower-roman;
}

.markdown-body ul ul ol,
.markdown-body ul ol ol,
.markdown-body ol ul ol,
.markdown-body ol ol ol {
  list-style-type: lower-alpha;
}

.markdown-body dd {
  margin-left: 0;
}

.markdown-body code,
.markdown-body pre,
.markdown-body samp {
  font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;
  font-size: 12px;
}

.markdown-body pre {
  margin-top: 0;
  margin-bottom: 0;
}

.markdown-body kbd {
  background-color: #e7e7e7;
  background-image: -moz-linear-gradient(#fefefe, #e7e7e7);
  background-image: -webkit-linear-gradient(#fefefe, #e7e7e7);
  background-image: linear-gradient(#fefefe, #e7e7e7);
  background-repeat: repeat-x;
  border-radius: 2px;
  border: 1px solid #cfcfcf;
  color: #000;
  padding: 3px 5px;
  line-height: 10px;
  font: 11px Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;
  display: inline-block;
}

.markdown-body&gt;*:first-child {
  margin-top: 0 !important;
}

.markdown-body&gt;*:last-child {
  margin-bottom: 0 !important;
}

.markdown-body .headeranchor-link {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  display: block;
  padding-right: 6px;
  padding-left: 30px;
  margin-left: -30px;
}

.markdown-body .headeranchor-link:focus {
  outline: none;
}

.markdown-body h1,
.markdown-body h2,
.markdown-body h3,
.markdown-body h4,
.markdown-body h5,
.markdown-body h6 {
  position: relative;
  margin-top: 1em;
  margin-bottom: 16px;
  font-weight: bold;
  line-height: 1.4;
}

.markdown-body h1 .headeranchor,
.markdown-body h2 .headeranchor,
.markdown-body h3 .headeranchor,
.markdown-body h4 .headeranchor,
.markdown-body h5 .headeranchor,
.markdown-body h6 .headeranchor {
  display: none;
  color: #000;
  vertical-align: middle;
}

.markdown-body h1:hover .headeranchor-link,
.markdown-body h2:hover .headeranchor-link,
.markdown-body h3:hover .headeranchor-link,
.markdown-body h4:hover .headeranchor-link,
.markdown-body h5:hover .headeranchor-link,
.markdown-body h6:hover .headeranchor-link {
  height: 1em;
  padding-left: 8px;
  margin-left: -30px;
  line-height: 1;
  text-decoration: none;
}

.markdown-body h1:hover .headeranchor-link .headeranchor,
.markdown-body h2:hover .headeranchor-link .headeranchor,
.markdown-body h3:hover .headeranchor-link .headeranchor,
.markdown-body h4:hover .headeranchor-link .headeranchor,
.markdown-body h5:hover .headeranchor-link .headeranchor,
.markdown-body h6:hover .headeranchor-link .headeranchor {
  display: inline-block;
}

.markdown-body h1 {
  padding-bottom: 0.3em;
  font-size: 2.25em;
  line-height: 1.2;
  border-bottom: 1px solid #eee;
}

.markdown-body h2 {
  padding-bottom: 0.3em;
  font-size: 1.75em;
  line-height: 1.225;
  border-bottom: 1px solid #eee;
}

.markdown-body h3 {
  font-size: 1.5em;
  line-height: 1.43;
}

.markdown-body h4 {
  font-size: 1.25em;
}

.markdown-body h5 {
  font-size: 1em;
}

.markdown-body h6 {
  font-size: 1em;
  color: #777;
}

.markdown-body p,
.markdown-body blockquote,
.markdown-body ul,
.markdown-body ol,
.markdown-body dl,
.markdown-body table,
.markdown-body pre,
.markdown-body .admonition {
  margin-top: 0;
  margin-bottom: 16px;
}

.markdown-body hr {
  height: 4px;
  padding: 0;
  margin: 16px 0;
  background-color: #e7e7e7;
  border: 0 none;
}

.markdown-body ul,
.markdown-body ol {
  padding-left: 2em;
}

.markdown-body ul ul,
.markdown-body ul ol,
.markdown-body ol ol,
.markdown-body ol ul {
  margin-top: 0;
  margin-bottom: 0;
}

.markdown-body li&gt;p {
  margin-top: 16px;
}

.markdown-body dl {
  padding: 0;
}

.markdown-body dl dt {
  padding: 0;
  margin-top: 16px;
  font-size: 1em;
  font-style: italic;
  font-weight: bold;
}

.markdown-body dl dd {
  padding: 0 16px;
  margin-bottom: 16px;
}

.markdown-body blockquote {
  padding: 0 15px;
  color: #777;
  border-left: 4px solid #ddd;
}

.markdown-body blockquote&gt;:first-child {
  margin-top: 0;
}

.markdown-body blockquote&gt;:last-child {
  margin-bottom: 0;
}

.markdown-body table {
  display: block;
  width: 100%;
  overflow: auto;
  word-break: normal;
  word-break: keep-all;
}

.markdown-body table th {
  font-weight: bold;
}

.markdown-body table th,
.markdown-body table td {
  padding: 6px 13px;
  border: 1px solid #ddd;
}

.markdown-body table tr {
  background-color: #fff;
  border-top: 1px solid #ccc;
}

.markdown-body table tr:nth-child(2n) {
  background-color: #f8f8f8;
}

.markdown-body img {
  max-width: 100%;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

.markdown-body code,
.markdown-body samp {
  padding: 0;
  padding-top: 0.2em;
  padding-bottom: 0.2em;
  margin: 0;
  font-size: 85%;
  background-color: rgba(0,0,0,0.04);
  border-radius: 3px;
}

.markdown-body code:before,
.markdown-body code:after {
  letter-spacing: -0.2em;
  content: &quot;\00a0&quot;;
}

.markdown-body pre&gt;code {
  padding: 0;
  margin: 0;
  font-size: 100%;
  word-break: normal;
  white-space: pre;
  background: transparent;
  border: 0;
}

.markdown-body .codehilite {
  margin-bottom: 16px;
}

.markdown-body .codehilite pre,
.markdown-body pre {
  padding: 16px;
  overflow: auto;
  font-size: 85%;
  line-height: 1.45;
  background-color: #f7f7f7;
  border-radius: 3px;
}

.markdown-body .codehilite pre {
  margin-bottom: 0;
  word-break: normal;
}

.markdown-body pre {
  word-wrap: normal;
}

.markdown-body pre code {
  display: inline;
  max-width: initial;
  padding: 0;
  margin: 0;
  overflow: initial;
  line-height: inherit;
  word-wrap: normal;
  background-color: transparent;
  border: 0;
}

.markdown-body pre code:before,
.markdown-body pre code:after {
  content: normal;
}

/* Admonition */
.markdown-body .admonition {
  -webkit-border-radius: 3px;
  -moz-border-radius: 3px;
  position: relative;
  border-radius: 3px;
  border: 1px solid #e0e0e0;
  border-left: 6px solid #333;
  padding: 10px 10px 10px 30px;
}

.markdown-body .admonition table {
  color: #333;
}

.markdown-body .admonition p {
  padding: 0;
}

.markdown-body .admonition-title {
  font-weight: bold;
  margin: 0;
}

.markdown-body .admonition&gt;.admonition-title {
  color: #333;
}

.markdown-body .attention&gt;.admonition-title {
  color: #a6d796;
}

.markdown-body .caution&gt;.admonition-title {
  color: #d7a796;
}

.markdown-body .hint&gt;.admonition-title {
  color: #96c6d7;
}

.markdown-body .danger&gt;.admonition-title {
  color: #c25f77;
}

.markdown-body .question&gt;.admonition-title {
  color: #96a6d7;
}

.markdown-body .note&gt;.admonition-title {
  color: #d7c896;
}

.markdown-body .admonition:before,
.markdown-body .attention:before,
.markdown-body .caution:before,
.markdown-body .hint:before,
.markdown-body .danger:before,
.markdown-body .question:before,
.markdown-body .note:before {
  font: normal normal 16px fontawesome-mini;
  -moz-osx-font-smoothing: grayscale;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  line-height: 1.5;
  color: #333;
  position: absolute;
  left: 0;
  top: 0;
  padding-top: 10px;
  padding-left: 10px;
}

.markdown-body .admonition:before {
  content: &quot;\f056\00a0&quot;;
  color: 333;
}

.markdown-body .attention:before {
  content: &quot;\f058\00a0&quot;;
  color: #a6d796;
}

.markdown-body .caution:before {
  content: &quot;\f06a\00a0&quot;;
  color: #d7a796;
}

.markdown-body .hint:before {
  content: &quot;\f05a\00a0&quot;;
  color: #96c6d7;
}

.markdown-body .danger:before {
  content: &quot;\f057\00a0&quot;;
  color: #c25f77;
}

.markdown-body .question:before {
  content: &quot;\f059\00a0&quot;;
  color: #96a6d7;
}

.markdown-body .note:before {
  content: &quot;\f040\00a0&quot;;
  color: #d7c896;
}

.markdown-body .admonition::after {
  content: normal;
}

.markdown-body .attention {
  border-left: 6px solid #a6d796;
}

.markdown-body .caution {
  border-left: 6px solid #d7a796;
}

.markdown-body .hint {
  border-left: 6px solid #96c6d7;
}

.markdown-body .danger {
  border-left: 6px solid #c25f77;
}

.markdown-body .question {
  border-left: 6px solid #96a6d7;
}

.markdown-body .note {
  border-left: 6px solid #d7c896;
}

.markdown-body .admonition&gt;*:first-child {
  margin-top: 0 !important;
}

.markdown-body .admonition&gt;*:last-child {
  margin-bottom: 0 !important;
}

/* progress bar*/
.markdown-body .progress {
  display: block;
  width: 300px;
  margin: 10px 0;
  height: 24px;
  -webkit-border-radius: 3px;
  -moz-border-radius: 3px;
  border-radius: 3px;
  background-color: #ededed;
  position: relative;
  box-shadow: inset -1px 1px 3px rgba(0, 0, 0, .1);
}

.markdown-body .progress-label {
  position: absolute;
  text-align: center;
  font-weight: bold;
  width: 100%; margin: 0;
  line-height: 24px;
  color: #333;
  text-shadow: 1px 1px 0 #fefefe, -1px -1px 0 #fefefe, -1px 1px 0 #fefefe, 1px -1px 0 #fefefe, 0 1px 0 #fefefe, 0 -1px 0 #fefefe, 1px 0 0 #fefefe, -1px 0 0 #fefefe, 1px 1px 2px #000;
  -webkit-font-smoothing: antialiased !important;
  white-space: nowrap;
  overflow: hidden;
}

.markdown-body .progress-bar {
  height: 24px;
  float: left;
  -webkit-border-radius: 3px;
  -moz-border-radius: 3px;
  border-radius: 3px;
  background-color: #96c6d7;
  box-shadow: inset 0 1px 0 rgba(255, 255, 255, .5), inset 0 -1px 0 rgba(0, 0, 0, .1);
  background-size: 30px 30px;
  background-image: -webkit-linear-gradient(
    135deg, rgba(255, 255, 255, .4) 27%,
    transparent 27%,
    transparent 52%, rgba(255, 255, 255, .4) 52%,
    rgba(255, 255, 255, .4) 77%,
    transparent 77%, transparent
  );
  background-image: -moz-linear-gradient(
    135deg,
    rgba(255, 255, 255, .4) 27%, transparent 27%,
    transparent 52%, rgba(255, 255, 255, .4) 52%,
    rgba(255, 255, 255, .4) 77%, transparent 77%,
    transparent
  );
  background-image: -ms-linear-gradient(
    135deg,
    rgba(255, 255, 255, .4) 27%, transparent 27%,
    transparent 52%, rgba(255, 255, 255, .4) 52%,
    rgba(255, 255, 255, .4) 77%, transparent 77%,
    transparent
  );
  background-image: -o-linear-gradient(
    135deg,
    rgba(255, 255, 255, .4) 27%, transparent 27%,
    transparent 52%, rgba(255, 255, 255, .4) 52%,
    rgba(255, 255, 255, .4) 77%, transparent 77%,
    transparent
  );
  background-image: linear-gradient(
    135deg,
    rgba(255, 255, 255, .4) 27%, transparent 27%,
    transparent 52%, rgba(255, 255, 255, .4) 52%,
    rgba(255, 255, 255, .4) 77%, transparent 77%,
    transparent
  );
}

.markdown-body .progress-100plus .progress-bar {
  background-color: #a6d796;
}

.markdown-body .progress-80plus .progress-bar {
  background-color: #c6d796;
}

.markdown-body .progress-60plus .progress-bar {
  background-color: #d7c896;
}

.markdown-body .progress-40plus .progress-bar {
  background-color: #d7a796;
}

.markdown-body .progress-20plus .progress-bar {
  background-color: #d796a6;
}

.markdown-body .progress-0plus .progress-bar {
  background-color: #c25f77;
}

.markdown-body .candystripe-animate .progress-bar{
  -webkit-animation: animate-stripes 3s linear infinite;
  -moz-animation: animate-stripes 3s linear infinite;
  animation: animate-stripes 3s linear infinite;
}

@-webkit-keyframes animate-stripes {
  0% {
    background-position: 0 0;
  }

  100% {
    background-position: 60px 0;
  }
}

@-moz-keyframes animate-stripes {
  0% {
    background-position: 0 0;
  }

  100% {
    background-position: 60px 0;
  }
}

@keyframes animate-stripes {
  0% {
    background-position: 0 0;
  }

  100% {
    background-position: 60px 0;
  }
}

.markdown-body .gloss .progress-bar {
  box-shadow:
    inset 0 4px 12px rgba(255, 255, 255, .7),
    inset 0 -12px 0 rgba(0, 0, 0, .05);
}

/* Multimarkdown Critic Blocks */
.markdown-body .critic_mark {
  background: #ff0;
}

.markdown-body .critic_delete {
  color: #c82829;
  text-decoration: line-through;
}

.markdown-body .critic_insert {
  color: #718c00 ;
  text-decoration: underline;
}

.markdown-body .critic_comment {
  color: #8e908c;
  font-style: italic;
}

.markdown-body .headeranchor {
  font: normal normal 16px octicons-anchor;
  line-height: 1;
  display: inline-block;
  text-decoration: none;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.headeranchor:before {
  content: '\f05c';
}

.markdown-body .task-list-item {
  list-style-type: none;
}

.markdown-body .task-list-item+.task-list-item {
  margin-top: 3px;
}

.markdown-body .task-list-item input {
  margin: 0 4px 0.25em -20px;
  vertical-align: middle;
}

/* Media */
@media only screen and (min-width: 480px) {
  .markdown-body {
    font-size:14px;
  }
}

@media only screen and (min-width: 768px) {
  .markdown-body {
    font-size:16px;
  }
}

@media print {
  .markdown-body * {
    background: transparent !important;
    color: black !important;
    filter:none !important;
    -ms-filter: none !important;
  }

  .markdown-body {
    font-size:12pt;
    max-width:100%;
    outline:none;
    border: 0;
  }

  .markdown-body a,
  .markdown-body a:visited {
    text-decoration: underline;
  }

  .markdown-body .headeranchor-link {
    display: none;
  }

  .markdown-body a[href]:after {
    content: &quot; (&quot; attr(href) &quot;)&quot;;
  }

  .markdown-body abbr[title]:after {
    content: &quot; (&quot; attr(title) &quot;)&quot;;
  }

  .markdown-body .ir a:after,
  .markdown-body a[href^=&quot;javascript:&quot;]:after,
  .markdown-body a[href^=&quot;#&quot;]:after {
    content: &quot;&quot;;
  }

  .markdown-body pre {
    white-space: pre;
    white-space: pre-wrap;
    word-wrap: break-word;
  }

  .markdown-body pre,
  .markdown-body blockquote {
    border: 1px solid #999;
    padding-right: 1em;
    page-break-inside: avoid;
  }

  .markdown-body .progress,
  .markdown-body .progress-bar {
    -moz-box-shadow: none;
    -webkit-box-shadow: none;
    box-shadow: none;
  }

  .markdown-body .progress {
    border: 1px solid #ddd;
  }

  .markdown-body .progress-bar {
    height: 22px;
    border-right: 1px solid #ddd;
  }

  .markdown-body tr,
  .markdown-body img {
    page-break-inside: avoid;
  }

  .markdown-body img {
    max-width: 100% !important;
  }

  .markdown-body p,
  .markdown-body h2,
  .markdown-body h3 {
    orphans: 3;
    widows: 3;
  }

  .markdown-body h2,
  .markdown-body h3 {
    page-break-after: avoid;
  }
}
&lt;/style&gt;&lt;title&gt;&quot;Past and future&quot;&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;article class=&quot;markdown-body&quot;&gt;&lt;h1 id=&quot;past-and-future&quot;&gt;&lt;a name=&quot;user-content-past-and-future&quot; href=&quot;#past-and-future&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;Past and future&lt;/h1&gt;
&lt;h2 id=&quot;java&quot;&gt;&lt;a name=&quot;user-content-java&quot; href=&quot;#java&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;java&lt;/h2&gt;
&lt;h3 id=&quot;java_1&quot;&gt;&lt;a name=&quot;user-content-java_1&quot; href=&quot;#java_1&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;java 基础题目待办列表&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;java base 1000     30%&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;java answer    精华专区-&amp;gt;java问答题  0 %&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;_1&quot;&gt;&lt;a name=&quot;user-content-_1&quot; href=&quot;#_1&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;数据结构&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;数据结构基础       -&amp;gt; 剑指offer hot前20&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;_2&quot;&gt;&lt;a name=&quot;user-content-_2&quot; href=&quot;#_2&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;设计模式  ###&lt;/h3&gt;
&lt;h4 id=&quot;_3&quot;&gt;&lt;a name=&quot;user-content-_3&quot; href=&quot;#_3&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;创建型模式&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;单例模式（Singleton Pattern）&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;产生一个对象该对象只能存在一个&lt;/li&gt;
&lt;li&gt;阐述例子： 数据库帮助对象 (线程问题) 同步加锁&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;工厂模式（Factory Pattern）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;抽象工厂模式（Abstract Factory Pattern）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;用于产生一个简单的对象，减少过多的配置信息填入.&lt;/li&gt;
&lt;li&gt;阐述例子： 产生一个线程池（配参数信息，单核双核） &lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;原型模式（Prototype Pattern）&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;复制一个已经存在的对象clone 减少创建一个对象的成本 只改变其中的细节&lt;/li&gt;
&lt;li&gt;阐述例子： 发送邮件 更改内容不更改基本信息 （多用于for循环中产生对象）深clone浅clone&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;建造者模式（Builder Pattern）&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;产生一个复杂对象，更加注重零件的组装顺序&lt;/li&gt;
&lt;li&gt;阐述例子： 汽车的装配顺序&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;_4&quot;&gt;&lt;a name=&quot;user-content-_4&quot; href=&quot;#_4&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;结构型模式&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;适配器模式（Adapter Pattern）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;a-b-c  b 通过继承或者实现A 的接口 完成 原有对象到外来对象同转化 &lt;/li&gt;
&lt;li&gt;阐述例子 ：AIDL对象&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;代理模式（Proxy Pattern）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;代理模式 和过滤器模式相似 都是对行为一种监听和查看 &lt;/li&gt;
&lt;li&gt;阐述例子： 静态代理和动态代理（反射机制）&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;享元模式（Flyweight Pattern）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;定义几个经常被用的对象的对象池,然后共同使用同一个对象减少内存的开销，注意使用的颗粒度. &lt;/li&gt;
&lt;li&gt;阐述例子： 例如考试信息省份等  &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;组合模式（Composite Pattern）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;用于树形结构 现已经不常用&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;桥接模式（Bridge Pattern）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;过滤器模式（Filter、Criteria Pattern）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;装饰器模式（Decorator Pattern）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;外观模式（Facade Pattern）&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;_5&quot;&gt;&lt;a name=&quot;user-content-_5&quot; href=&quot;#_5&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;行为型模式&lt;/h4&gt;
&lt;p&gt;这些设计模式特别关注对象之间的通信。  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;责任链模式（Chain of Responsibility Pattern）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;阐述例子：touch点击事件&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;状态模式（State Pattern）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;根据状态决定行为模式和方法，对状态进行封装. &lt;/li&gt;
&lt;li&gt;阐述例子：电梯状态方法&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;访问者模式（Visitor Pattern）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;根据访问对象的不同给出不同的应对策略.&lt;/li&gt;
&lt;li&gt;阐述例子：web/android 访问servlet&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;观察者模式（Observer Pattern) &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;阐述例子：EventBus 和Rxjava的实现思想.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;备忘录模式（Memento Pattern）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;对对象内部的状态进行备份，是针对对象进行的备份（在运行期的一种备份模式).&lt;/li&gt;
&lt;li&gt;阐述例子： user登陆信息.   &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;命令模式（Command Pattern）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;对指令的一种包装&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;迭代器模式（Iterator Pattern）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;已经被java中的迭代器代替了&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;策略模式（Strategy Pattern）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;和代理模式相似 和访问者模式也相似 ，是执行同一种方法，通过产生不同的策略执行不同的方法&lt;/li&gt;
&lt;li&gt;阐述例子： Rxjava&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;中介者模式（Mediator Pattern）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;MVC中的C&lt;/li&gt;
&lt;li&gt;阐述例子：MVC模式 listview baseAdapter&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;解释器模式（Interpreter Pattern）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;解释一种特定的语法。hashMap 这种方式 采用递归，压栈，设置终止元素和非终止元素。代码臃肿维护难，通常可以采用脚本的方式进行优化，不深究&lt;/li&gt;
&lt;li&gt;阐述例子：计算器 四则运算&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;模板模式（Template Pattern）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;空对象模式（Null Object Pattern）&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;j2ee&quot;&gt;&lt;a name=&quot;user-content-j2ee&quot; href=&quot;#j2ee&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;J2EE 模式&lt;/h4&gt;
&lt;p&gt;这些设计模式特别关注表示层。这些模式是由 Sun Java Center 鉴定的。   &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MVC 模式（MVC Pattern）&lt;/li&gt;
&lt;li&gt;业务代表模式（Business Delegate Pattern）&lt;/li&gt;
&lt;li&gt;组合实体模式（Composite Entity Pattern）&lt;/li&gt;
&lt;li&gt;数据访问对象模式（Data Access Object Pattern）&lt;/li&gt;
&lt;li&gt;前端控制器模式（Front Controller Pattern）&lt;/li&gt;
&lt;li&gt;拦截过滤器模式（Intercepting Filter Pattern）&lt;/li&gt;
&lt;li&gt;服务定位器模式（Service Locator Pattern）&lt;/li&gt;
&lt;li&gt;传输对象模式（Transfer Object Pattern）&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;useunderstand&quot;&gt;&lt;a name=&quot;user-content-useunderstand&quot; href=&quot;#useunderstand&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;use/understand&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;创建型模式:
    单例模式（Singleton Pattern）
    工厂模式（Factory Pattern）
    原型模式（Prototype Pattern）
结构型模式:
    适配器模式（Adapter Pattern）
    代理模式（Proxy Pattern）
    享元模式（Flyweight Pattern）
行为型模式:
    责任链模式（Chain of Responsibility Pattern）
    状态模式（State Pattern）
    访问者模式（Visitor Pattern）
    观察者模式（Observer Pattern）
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;android-application&quot;&gt;&lt;a name=&quot;user-content-android-application&quot; href=&quot;#android-application&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;android application ##&lt;/h2&gt;
&lt;p&gt;now: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;项目 &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;智慧新闻 &lt;/li&gt;
&lt;li&gt;商城&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;掌握基本框架使用&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Dagger2 &lt;/li&gt;
&lt;li&gt;EventBus &lt;/li&gt;
&lt;li&gt;litepal  &lt;/li&gt;
&lt;li&gt;butterknife &lt;/li&gt;
&lt;li&gt;retifate&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MVP MVC 可以使用&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;网络框架没有学习过。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;了解apk 的发布流程 和其中的过程&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;混淆&lt;/li&gt;
&lt;li&gt;签名&lt;/li&gt;
&lt;li&gt;反编译&lt;/li&gt;
&lt;li&gt;crash&lt;/li&gt;
&lt;li&gt;jni开发&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;细节&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;几种回调方式 引用的复习和使用      &lt;/li&gt;
&lt;li&gt;Fragment Rectley 等控件的回调使用&lt;/li&gt;
&lt;li&gt;User全局变量的控制流程&lt;/li&gt;
&lt;li&gt;布局的调试方式DDMS 截屏&lt;/li&gt;
&lt;li&gt;AIDL 跨进程通信 传输序列化对象！&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;future:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tag的规范使用&lt;/li&gt;
&lt;li&gt;内存泄露的处理方式OOM&lt;/li&gt;
&lt;li&gt;MVVM的深度学习（）demo 搭建demo （记笔记！）&lt;/li&gt;
&lt;li&gt;尝试框架集成使用Rxjava+Retorfit&lt;/li&gt;
&lt;li&gt;商城类APP功能开发&lt;pre&gt;&lt;code&gt;1.下拉刷新 ==
2.分类 *
3.搜索功能 ==
4.排序 （）==
5.个人中心模块完善 增添头像功能 ==
6.和HTML5 交互 =*
7.三方登陆网络交互 *
8.三方登陆
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;android&quot;&gt;&lt;a name=&quot;user-content-android&quot; href=&quot;#android&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;android 基础题目待办列表&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;android base   70%&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;android-framework&quot;&gt;&lt;a name=&quot;user-content-android-framework&quot; href=&quot;#android-framework&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;android framework ##&lt;/h2&gt;
&lt;p&gt;now:&lt;/p&gt;
&lt;p&gt;1.内容 &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;超级省电&lt;/li&gt;
&lt;li&gt;notification  从产生开始到销毁结束&lt;/li&gt;
&lt;li&gt;宏控 和脚本的执行流程  如何自定义宏控&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;future:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;phonewindowmanager  按键 事件 &lt;/li&gt;
&lt;li&gt;
&lt;p&gt;prefrence  如何保存 并绘制 永久带数据库的视图&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;package-app-systemUI&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;activity 启动过程&lt;pre&gt;&lt;code&gt;    1.Zygote+
    2.systemservice
    3.AMS
    4.PMS
    5.应用程序启动过程

    8月：bindler ipc+4大组件启动模式+消息处理机制looper
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;web&quot;&gt;&lt;a name=&quot;user-content-web&quot; href=&quot;#web&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;web&lt;/h2&gt;
&lt;p&gt;now: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;项目&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;考试系统 &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;流程&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;了解后端和前端如何联系，后端是如何实现和搭建的做过简单的Demo&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;自建blog&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;基础知识&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;- servlet
- jsp
- eL表达式
- 表单数据使用
- 隐式对象
- 使用代码片段
- js
- html
- css
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;future:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    1.jqueary  
    2.http协议分析处理
    3.数据库操作事务处理
    4.aop 面向切片编程
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;tools&quot;&gt;&lt;a name=&quot;user-content-tools&quot; href=&quot;#tools&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;tools&lt;/h2&gt;
&lt;p&gt;now: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;androidstudio &lt;/li&gt;
&lt;li&gt;eclipse&lt;/li&gt;
&lt;li&gt;ubuntu&lt;/li&gt;
&lt;li&gt;adb&lt;/li&gt;
&lt;li&gt;shell &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;future:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;linux 命令&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;want-to-do&quot;&gt;&lt;a name=&quot;user-content-want-to-do&quot; href=&quot;#want-to-do&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;Want to do&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;逆向工程&lt;/li&gt;
&lt;li&gt;smlite 语言&lt;/li&gt;
&lt;li&gt;shell &lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;work-experience&quot;&gt;&lt;a name=&quot;user-content-work-experience&quot; href=&quot;#work-experience&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;work experience&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;宁波萨瑞通信&lt;/li&gt;
&lt;li&gt;江西时空电子&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;link&quot;&gt;&lt;a name=&quot;user-content-link&quot; href=&quot;#link&quot; class=&quot;headeranchor-link&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;headeranchor&quot;&gt;&lt;/span&gt;&lt;/a&gt;link ##&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/cuizehui123&quot;&gt;CSDN_nela&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://cuizehui.github.io&quot;&gt;github_nela &lt;/a&gt;&lt;/p&gt;&lt;/article&gt;&lt;/body&gt;&lt;/html&gt;</description>
        <pubDate>Tue, 16 Jan 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/01/16/responsive-cuizehui/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/01/16/responsive-cuizehui/</guid>
        
        
      </item>
    
      <item>
        <title>StatusBar添加Notifaction流程分析  </title>
        <description>&lt;h2 id=&quot;statusbar--notifaction&quot;&gt;StatusBar  Notifaction&lt;/h2&gt;

&lt;h3 id=&quot;statusbar通过notifaction初始化通知条&quot;&gt;StatusBar通过Notifaction初始化通知条&lt;/h3&gt;

&lt;p&gt;PhoneStatusBar -&amp;gt;BaseStatusBar&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;boot 引导文件启动&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SystemUIserVice&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    private final Class&amp;lt;?&amp;gt;[] SERVICES = new Class[] {
            com.android.systemui.tuner.TunerService.class, //定制状态栏服务
            com.android.systemui.keyguard.KeyguardViewMediator.class,//锁屏模块
            com.android.systemui.recents.Recents.class,//最近应用
            com.android.systemui.volume.VolumeUI.class,//全局音量控制
            com.android.systemui.statusbar.SystemBars.class,//系统状态栏
            com.android.systemui.usb.StorageNotification.class,//Storage存储通知
            com.android.systemui.power.PowerUI.class,//电量管理相关
            com.android.systemui.media.RingtonePlayer.class,//铃声播放
            com.android.systemui.keyboard.KeyboardUI.class,//键盘相关
    };

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;这里的service只是继承了SystemUI类的普通对象而已。&lt;/p&gt;

    &lt;p&gt;执行SystemBars.start()后，通过反射机制,最终得到BaseStatusBar对象。
这里需要说明的是BaseStatusBar是PhoneStatusBar的父类。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SystemUI -&amp;gt;start()&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;BaseStatusBar start():&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;         public void start() {

             //注册服务

             mWindowManager = (WindowManager)mContext.getSystemService(Context.WINDOW_SERVICE);
             mWindowManagerService = WindowManagerGlobal.getWindowManagerService();
             mDisplay = mWindowManager.getDefaultDisplay();
             mDevicePolicyManager = (DevicePolicyManager)mContext.getSystemService(
                     Context.DEVICE_POLICY_SERVICE);

             mNotificationData = new NotificationData(this);

             mAccessibilityManager = (AccessibilityManager)
                     mContext.getSystemService(Context.ACCESSIBILITY_SERVICE);

             mDreamManager = IDreamManager.Stub.asInterface(
                     ServiceManager.checkService(DreamService.DREAM_SERVICE));
             mPowerManager = (PowerManager) mContext.getSystemService(Context.POWER_SERVICE);

             mContext.getContentResolver().registerContentObserver(
                     Settings.Global.getUriFor(Settings.Global.DEVICE_PROVISIONED), true,
                     mSettingsObserver);
             mContext.getContentResolver().registerContentObserver(
                     Settings.Global.getUriFor(Settings.Global.ZEN_MODE), false,
                     mSettingsObserver);

                     //设置锁屏通知 观察者  在 子类变成 mHeadsUpObserver
             mContext.getContentResolver().registerContentObserver(
                     Settings.Secure.getUriFor(Settings.Secure.LOCK_SCREEN_SHOW_NOTIFICATIONS), false,
                     mSettingsObserver,
                     UserHandle.USER_ALL);

             if (ENABLE_LOCK_SCREEN_ALLOW_REMOTE_INPUT) {
                 mContext.getContentResolver().registerContentObserver(
                         Settings.Secure.getUriFor(Settings.Secure.LOCK_SCREEN_ALLOW_REMOTE_INPUT),
                         false,
                         mSettingsObserver,
                         UserHandle.USER_ALL);
             }
              //锁屏通知监听者 当url 变化时 调用change 方法   于初始化有关
             mContext.getContentResolver().registerContentObserver(
                     Settings.Secure.getUriFor(Settings.Secure.LOCK_SCREEN_ALLOW_PRIVATE_NOTIFICATIONS),
                     true,
                     mLockscreenSettingsObserver,
                     UserHandle.USER_ALL);

             mBarService = IStatusBarService.Stub.asInterface(
                     ServiceManager.getService(Context.STATUS_BAR_SERVICE));

             mRecents = getComponent(Recents.class);

             final Configuration currentConfig = mContext.getResources().getConfiguration();
             mLocale = currentConfig.locale;
             mLayoutDirection = TextUtils.getLayoutDirectionFromLocale(mLocale);
             mFontScale = currentConfig.fontScale;
             mDensity = currentConfig.densityDpi;

             mUserManager = (UserManager) mContext.getSystemService(Context.USER_SERVICE);
             mKeyguardManager = (KeyguardManager) mContext.getSystemService(Context.KEYGUARD_SERVICE);
             mLockPatternUtils = new LockPatternUtils(mContext);

             // Connect in to the status bar manager service   连接到状态栏管理器服务
             mCommandQueue = new CommandQueue(this);

             int[] switches = new int[9];
             ArrayList&amp;lt;IBinder&amp;gt; binders = new ArrayList&amp;lt;IBinder&amp;gt;();
             ArrayList&amp;lt;String&amp;gt; iconSlots = new ArrayList&amp;lt;&amp;gt;();
             ArrayList&amp;lt;StatusBarIcon&amp;gt; icons = new ArrayList&amp;lt;&amp;gt;();
             Rect fullscreenStackBounds = new Rect();
             Rect dockedStackBounds = new Rect();
             try {
                 mBarService.registerStatusBar(mCommandQueue, iconSlots, icons, switches, binders,
                         fullscreenStackBounds, dockedStackBounds);
             } catch (RemoteException ex) {
                 // If the system process isn't there we're doomed anyway.
             }
             //创建视图
             createAndAddWindows();
             //创建视图

             mSettingsObserver.onChange(false); // set up
             disable(switches[0], switches[6], false /* animate */);
             setSystemUiVisibility(switches[1], switches[7], switches[8], 0xffffffff,
                     fullscreenStackBounds, dockedStackBounds);
             topAppWindowChanged(switches[2] != 0);
             // StatusBarManagerService has a back up of IME token and it's restored here.
             setImeWindowStatus(binders.get(0), switches[3], switches[4], switches[5] != 0);

             // Set up the initial icon state
             int N = iconSlots.size();
             int viewIndex = 0;
             for (int i=0; i &amp;lt; N; i++) {
                 setIcon(iconSlots.get(i), icons.get(i));
             }

             // Set up the initial notification state.  设置初始通知状态
             try {
                 //设置监听 ，当发生通知产生 移除 ，更新时 会在其中调用相应方法
                 mNotificationListener.registerAsSystemService(mContext,
                         new ComponentName(mContext.getPackageName(), getClass().getCanonicalName()),
                         UserHandle.USER_ALL);
             } catch (RemoteException e) {
                 Log.e(TAG, &quot;Unable to register notification listener&quot;, e);
             }


             if (DEBUG) {
                 Log.d(TAG, String.format(
                         &quot;init: icons=%d disabled=0x%08x lights=0x%08x menu=0x%08x imeButton=0x%08x&quot;,
                        icons.size(),
                        switches[0],
                        switches[1],
                        switches[2],
                        switches[3]
                        ));
             }

     //注册广播
             mCurrentUserId = ActivityManager.getCurrentUser();
             setHeadsUpUser(mCurrentUserId);

             IntentFilter filter = new IntentFilter();
             filter.addAction(Intent.ACTION_USER_SWITCHED);
             filter.addAction(Intent.ACTION_USER_ADDED);
             filter.addAction(Intent.ACTION_USER_PRESENT);
             mContext.registerReceiver(mBroadcastReceiver, filter);

             IntentFilter internalFilter = new IntentFilter();
             internalFilter.addAction(WORK_CHALLENGE_UNLOCKED_NOTIFICATION_ACTION);
             internalFilter.addAction(BANNER_ACTION_CANCEL);
             internalFilter.addAction(BANNER_ACTION_SETUP);
             mContext.registerReceiver(mBroadcastReceiver, internalFilter, PERMISSION_SELF, null);

             IntentFilter allUsersFilter = new IntentFilter();
             allUsersFilter.addAction(
                     DevicePolicyManager.ACTION_DEVICE_POLICY_MANAGER_STATE_CHANGED);
             mContext.registerReceiverAsUser(mAllUsersReceiver, UserHandle.ALL, allUsersFilter,
                     null, null);
             updateCurrentProfilesCache();

             IVrManager vrManager = IVrManager.Stub.asInterface(ServiceManager.getService(&quot;vrmanager&quot;));
             try {
                 vrManager.registerListener(mVrStateCallbacks);
             } catch (RemoteException e) {
                 Slog.e(TAG, &quot;Failed to register VR mode state listener: &quot; + e);
             }

          }

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;由上面代码可见start()方法中主要做了如下操作：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; -    绑定Oberver  mContext.getContentResolver().registerContentObserver(
         Settings.Secure.getUriFor(Settings.Secure.LOCK_SCREEN_ALLOW_PRIVATE_NOTIFICATIONS),
         true,
         mLockscreenSettingsObserver,
         UserHandle.USER_ALL);

 -     设置监听 ，当发生通知产生 移除，更新时 会在其中调用相应方法
     mNotificationListener.registerAsSystemService(mContext,
             new ComponentName(mContext.getPackageName(), getClass().getCanonicalName()),
             UserHandle.USER_ALL);
 -       初始化通知视图  createAndAddWindows();

 -      注册广播 mContext.registerReceiver(mBroadcastReceiver, filter);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; 本次分析只分析和Notifaction 相关的部分 &lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;其中的 mBroadcastReceiver 这个广播接受者 其中处理了notifaction 的事情：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;        private final BroadcastReceiver mBroadcastReceiver = new BroadcastReceiver() {
            @Override
            public void onReceive(Context context, Intent intent) {
                String action = intent.getAction();
                if (Intent.ACTION_USER_SWITCHED.equals(action)) {
                   .......
                } else if (Intent.ACTION_USER_ADDED.equals(action)) {
                    updateCurrentProfilesCache();
                } else if (Intent.ACTION_USER_PRESENT.equals(action)) {
                    .......
                } else if (BANNER_ACTION_CANCEL.equals(action) || BANNER_ACTION_SETUP.equals(action)) {
                    NotificationManager noMan = (NotificationManager)
                            mContext.getSystemService(Context.NOTIFICATION_SERVICE);
                    noMan.cancel(R.id.notification_hidden);

                    Settings.Secure.putInt(mContext.getContentResolver(),
                            Settings.Secure.SHOW_NOTE_ABOUT_NOTIFICATION_HIDING, 0);
                    if (BANNER_ACTION_SETUP.equals(action)) {
                        animateCollapsePanels(CommandQueue.FLAG_EXCLUDE_RECENTS_PANEL,
                                true /* force */);
                        mContext.startActivity(new Intent(Settings.ACTION_APP_NOTIFICATION_REDACTION)
                                .addFlags(Intent.FLAG_ACTIVITY_NEW_TASK)
                        );
                    }
                } else if (WORK_CHALLENGE_UNLOCKED_NOTIFICATION_ACTION.equals(action)) {
                .........
            }
            };
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;mNotificationListener 此监听为分析的重点，这里负责新notification 产生后视图的创建和销毁&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;```
     private final NotificationListenerService mNotificationListener =
                new NotificationListenerService() {
            @Override
            public void onListenerConnected() {
                if (DEBUG) Log.d(TAG, &quot;onListenerConnected&quot;);
                final StatusBarNotification[] notifications = getActiveNotifications();
                final RankingMap currentRanking = getCurrentRanking();
                mHandler.post(new Runnable() {
                    @Override
                    public void run() {
                        for (StatusBarNotification sbn : notifications) {
                            android.util.Log.d(&quot;czh&quot;,&quot;init  notification &quot;);
                            addNotification(sbn, currentRanking, null /* oldEntry */);
                        }
                    }
                });
            }

            @Override
            public void onNotificationPosted(final StatusBarNotification sbn,
                    final RankingMap rankingMap) {
                /// M: Enable this log for unusual case debug.
                /*if (DEBUG)*/ Log.d(TAG, &quot;onNotificationPosted: &quot; + sbn);
                if (sbn != null) {
                    //redmine115450 duxinyun modify powsave music 20180103 begin
                    String packageName = sbn.getPackageName();
                    int open = Settings.System.getInt(mContext.getContentResolver(), Settings.System.POWER_SAVE_SWITCH, 0);
                    if(open==1 &amp;amp;&amp;amp; !&quot;com.android.mms&quot;.equalsIgnoreCase(packageName)&amp;amp;&amp;amp;
                        !&quot;com.android.calculator2&quot;.equalsIgnoreCase(packageName)&amp;amp;&amp;amp;
                        !&quot;com.android.deskclock&quot;.equalsIgnoreCase(packageName)&amp;amp;&amp;amp;
                        !&quot;com.android.soundrecorder&quot;.equalsIgnoreCase(packageName)&amp;amp;&amp;amp;
                        !&quot;com.android.dialer&quot;.equalsIgnoreCase(packageName)){
                            removeNotification(sbn.getKey(), rankingMap);
                            return;
                    }
                    //redmine115450 duxinyun modify powsave music 20180103 end
                    mHandler.post(new Runnable() {
                        @Override
                        public void run() {
                            processForRemoteInput(sbn.getNotification());
                            String key = sbn.getKey();
                            mKeysKeptForRemoteInput.remove(key);
                            boolean isUpdate = mNotificationData.get(key) != null;
                            // In case we don't allow child notifications, we ignore children of
                            // notifications that have a summary, since we're not going to show them
                            // anyway. This is true also when the summary is canceled,
                            // because children are automatically canceled by NoMan in that case.
                            if (!ENABLE_CHILD_NOTIFICATIONS
                                &amp;amp;&amp;amp; mGroupManager.isChildInGroupWithSummary(sbn)) {
                                if (DEBUG) {
                                    Log.d(TAG, &quot;Ignoring group child due to existing summary: &quot; + sbn);
                                }

                                // Remove existing notification to avoid stale data.
                                if (isUpdate) {
                                    removeNotification(key, rankingMap);
                                } else {
                                    mNotificationData.updateRanking(rankingMap);
                                }
                                return;
                            }
                            if (isUpdate) {
                                updateNotification(sbn, rankingMap);
                            } else {
                                addNotification(sbn, rankingMap, null /* oldEntry */);
                            }
                        }
                    });
                }
            }

            @Override
            public void onNotificationRemoved(StatusBarNotification sbn,
                    final RankingMap rankingMap) {
                /// M: Enable this log for unusual case debug.
                /*if (DEBUG)*/ Log.d(TAG, &quot;onNotificationRemoved: &quot; + sbn);
                if (sbn != null) {
                    final String key = sbn.getKey();
                    mHandler.post(new Runnable() {
                        @Override
                        public void run() {
                            removeNotification(key, rankingMap);
                        }
                    });
                }
            }

            @Override
            public void onNotificationRankingUpdate(final RankingMap rankingMap) {
                if (DEBUG) Log.d(TAG, &quot;onRankingUpdate&quot;);
                if (rankingMap != null) {
                mHandler.post(new Runnable() {
                    @Override
                    public void run() {
                        updateNotificationRanking(rankingMap);
                    }
                });
            }                            }

        };

```

本质上：NotificationListenerService extends Service  此为远程服务
通过绑定此服务在底层对notification进行删除和添加，然后回调上面的方法,当一个新的通知产生后则先调用onNotificationPosted()
然后调用BaseStatusBar 的addNotification()，而addNotification()由其子类PhoneStatusBar 实现：
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;addNotification() 代码如下;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;       public void addNotification(StatusBarNotification notification, RankingMap ranking,
                 Entry oldEntry) {
             if (DEBUG) Log.d(TAG, &quot;addNotification key=&quot; + notification.getKey());
             /// M: [ALPS02738355] fix foreground service flag_hide_notification issue. @{
             if (notification != null &amp;amp;&amp;amp; notification.getNotification() != null &amp;amp;&amp;amp;
                    (notification.getNotification().flags &amp;amp; Notification.FLAG_HIDE_NOTIFICATION) != 0) {
                 Log.d(TAG, &quot;Will not add the notification.flags contains FLAG_HIDE_NOTIFICATION&quot;);
                 return;
             }
             /// @}
             mNotificationData.updateRanking(ranking);
             Entry shadeEntry = createNotificationViews(notification);
             if (shadeEntry == null) {
                 return;
             }
             boolean isHeadsUped = shouldPeek(shadeEntry);
             if (isHeadsUped) {
                 mHeadsUpManager.showNotification(shadeEntry);
                 // Mark as seen immediately
                 setNotificationShown(notification);
             }

             if (!isHeadsUped &amp;amp;&amp;amp; notification.getNotification().fullScreenIntent != null) {
                 if (shouldSuppressFullScreenIntent(notification.getKey())) {
                     if (DEBUG) {
                         Log.d(TAG, &quot;No Fullscreen intent: suppressed by DND: &quot; + notification.getKey());
                     }
                 } else if (mNotificationData.getImportance(notification.getKey())
                         &amp;lt; NotificationListenerService.Ranking.IMPORTANCE_MAX) {
                     if (DEBUG) {
                         Log.d(TAG, &quot;No Fullscreen intent: not important enough: &quot;
                                 - notification.getKey());
                     }
                 } else {
                     // Stop screensaver if the notification has a full-screen intent.
                     // (like an incoming phone call)
                     awakenDreams();

                     // not immersive &amp;amp; a full-screen alert should be shown
                     if (DEBUG)
                         Log.d(TAG, &quot;Notification has fullScreenIntent; sending fullScreenIntent&quot;);
                     try {
                         EventLog.writeEvent(EventLogTags.SYSUI_FULLSCREEN_NOTIFICATION,
                                 notification.getKey());
                         notification.getNotification().fullScreenIntent.send();
                         shadeEntry.notifyFullScreenIntentLaunched();
                         MetricsLogger.count(mContext, &quot;note_fullscreen&quot;, 1);
                     } catch (PendingIntent.CanceledException e) {
                     }
                 }
             }
             //cuizehui
             if(notification.getKey().equalsIgnoreCase(&quot;0|com.android.systemui|2131886133|null|10033&quot;))
             {
             android.util.Log.d(&quot;czh&quot;,&quot;not allow &quot;+notification.getKey());
             }
             else{
             android.util.Log.d(&quot;czh&quot;,&quot;equels  allow&quot;+notification.getKey());
             }
             //
             addNotificationViews(shadeEntry, ranking);
                
             // Recalculate the position of the sliding windows and the titles.
             setAreThereNotifications();
         }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;调用 addNotificationViews(); //添加条目.此方法在BaseStatusBar 中实现：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;       protected void addNotificationViews(Entry entry, RankingMap ranking) {
             if (entry == null) {
                 return;
             }

             android.util.Log.d(&quot;czh&quot;,&quot;add_notificationview&quot;);
                
             // Add the expanded view and icon.
             mNotificationData.add(entry, ranking);
             updateNotifications();
         }

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;调用子类PhoneStatusBar:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;         protected void updateNotifications() {
             mNotificationData.filterAndSort();

             updateNotificationShade();
             mIconController.updateNotificationIcons(mNotificationData);
         }

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;updateNotificationShade()：
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;        private void updateNotificationShade() {
            if (mStackScroller == null) return;

            // Do not modify the notifications during collapse.
            if (isCollapsing()) {
                addPostCollapseAction(new Runnable() {
                    @Override
                    public void run() {
                        updateNotificationShade();
                    }
                });
                return;
            }

            ArrayList&amp;lt;Entry&amp;gt; activeNotifications = mNotificationData.getActiveNotifications();
            ArrayList&amp;lt;ExpandableNotificationRow&amp;gt; toShow = new ArrayList&amp;lt;&amp;gt;(activeNotifications.size());
            final int N = activeNotifications.size();
            for (int i=0; i&amp;lt;N; i++) {
                Entry ent = activeNotifications.get(i);
                int vis = ent.notification.getNotification().visibility;

                // Display public version of the notification if we need to redact.
                final boolean hideSensitive =
                        !userAllowsPrivateNotificationsInPublic(ent.notification.getUserId());
                boolean sensitiveNote = vis == Notification.VISIBILITY_PRIVATE;
                boolean sensitivePackage = packageHasVisibilityOverride(ent.notification.getKey());
                boolean sensitive = (sensitiveNote &amp;amp;&amp;amp; hideSensitive) || sensitivePackage;
                boolean showingPublic = sensitive &amp;amp;&amp;amp; isLockscreenPublicMode();
                if (showingPublic) {
                    updatePublicContentView(ent, ent.notification);
                }
                ent.row.setSensitive(sensitive, hideSensitive);
                if (ent.autoRedacted &amp;amp;&amp;amp; ent.legacy) {
                    // TODO: Also fade this? Or, maybe easier (and better), provide a dark redacted form
                    // for legacy auto redacted notifications.
                    if (showingPublic) {
                        ent.row.setShowingLegacyBackground(false);
                    } else {
                        ent.row.setShowingLegacyBackground(true);
                    }
                }
                if (mGroupManager.isChildInGroupWithSummary(ent.row.getStatusBarNotification())) {
                    ExpandableNotificationRow summary = mGroupManager.getGroupSummary(
                            ent.row.getStatusBarNotification());
                    List&amp;lt;ExpandableNotificationRow&amp;gt; orderedChildren =
                            mTmpChildOrderMap.get(summary);
                    if (orderedChildren == null) {
                        orderedChildren = new ArrayList&amp;lt;&amp;gt;();
                        mTmpChildOrderMap.put(summary, orderedChildren);
                    }
                    orderedChildren.add(ent.row);
                } else {
                    toShow.add(ent.row);
                }

            }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;至此一个notification 则展示完全 ,可以发现最终显示在锁屏界面的通知栏是 ：ExpandableNotificationRow&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;应用&quot;&gt;应用&lt;/h3&gt;

&lt;p&gt;可以分析当我们需要，拦截掉某些notification 不让其显示则可以在源头：onNotificationPosted 进行包名的过滤和拦截
也可以在 addNotification() 限制其view 的添加和显示 addNotificationViews()不让其调用此方法&lt;/p&gt;

&lt;h3 id=&quot;待分析&quot;&gt;待分析&lt;/h3&gt;

&lt;p&gt;源头 ：NotificationListenerService&lt;/p&gt;

&lt;p&gt;删除一条notification的操作：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;public void removeNotification(String key, RankingMap ranking);&lt;/li&gt;
  &lt;li&gt;updateRowStates-&amp;gt;addNotification();  :    show Row&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 06 Jan 2018 02:13:00 +0800</pubDate>
        <link>http://localhost:4000/2018/01/05/responsive-android/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/01/05/responsive-android/</guid>
        
        <category>Android-SystemUI</category>
        
        
      </item>
    
      <item>
        <title>Jekyll + github pages 搭建blog</title>
        <description>&lt;h2 id=&quot;jekyll--github-pages-搭建blog&quot;&gt;Jekyll + github pages 搭建blog&lt;/h2&gt;

&lt;h3 id=&quot;搭建步骤&quot;&gt;搭建步骤&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;github 项目建立&lt;/li&gt;
  &lt;li&gt;jekyll 测试环境搭建:
    &lt;ul&gt;
      &lt;li&gt;ruby安装&lt;/li&gt;
      &lt;li&gt;gems 安装&lt;/li&gt;
      &lt;li&gt;jekyll 安装&lt;/li&gt;
      &lt;li&gt;sublime Text+markdown 编辑器&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;jekyll模板导入
    &lt;h3 id=&quot;学习搭建过程&quot;&gt;学习搭建过程&lt;/h3&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;jekyll项目架构&lt;/li&gt;
  &lt;li&gt;了解基本语法知识&lt;/li&gt;
  &lt;li&gt;在已有模板的基础上进行自定义&lt;/li&gt;
  &lt;li&gt;了解文章是如何进行解析的&lt;/li&gt;
  &lt;li&gt;了解布局是如何关联的
参考此文档
https://www.jekyll.com.cn/docs/structure/&lt;/li&gt;
  &lt;li&gt;掌握通过markdown编辑文章发布&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 02 Jan 2018 20:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/01/02/responsive-web/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/01/02/responsive-web/</guid>
        
        <category>前端开发</category>
        
        
      </item>
    
  </channel>
</rss>
